// Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2.
// The first ten pentagonal numbers are:

// 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

// It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their
// difference, 70 − 22 = 48, is not pentagonal.

// Find the pair of pentagonal numbers, Pj and Pk, for which their
// sum and difference are pentagonal and D = |Pk − Pj| is minimised;
// what is the value of D?

package main

import "fmt"

func pentagonal(n int) int {
	return (3*n*n - n) / 2
}

func main() {
	pmap := make(map[int]bool)
	pmap2 := make(map[int]int)

	for i := 1; i <= 1000000; i++ {
		pmap[pentagonal(i)] = true
		pmap2[i] = pentagonal(i)
	}

loop:
	for d := 1; d <= 100000; d++ {
		for i := 1; i < 1000000; i++ {
			if _, ok := pmap[pmap2[i+d]-pmap2[i]]; ok {
				if _, ok2 := pmap[pmap2[i+d]+pmap2[i]]; ok2 {
					fmt.Println(pmap2[i+d] - pmap2[i]) // 5482660
					break loop
				}
			}
		}
	}
}
